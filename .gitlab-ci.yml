  stages:
    - build-develop
    - deploy-develop
    - build-demo
    - deploy-demo

  build-develop:
    stage: build-develop
    tags:
      - build
    variables:
      STAGE: "${Digirefahi_Development_Build}"  
    script:
      - echo build started 
      - echo $STAGE
      - docker build --build-arg STAGE=${STAGE} -t digirefahi-front-dev:latest .
      - echo build is done
    rules:
    - if: '$CI_COMMIT_BRANCH == "development"'

  deploy-develop:
    stage: deploy-develop
    tags:
      - build
    script:
      - echo deployment started
      - docker rm -f digirefahi-front-dev || true  # Stop the previous container if running (ignore errors if it doesn't exist)
      - docker run -d -p 30011:80 --name digirefahi-front-dev digirefahi-front-dev:latest  # Start the new container with the latest image 
    after_script:  
      - echo deployment is done
      
    rules:
    - if: '$CI_COMMIT_BRANCH == "development"'


  build-demo:
      stage: build-demo
      tags:
        - build
      variables:
        STAGE: "${Digirefahi_Demo_Build}"    

      script:
        - echo build started
        - echo $STAGE
        - echo $Digirefahi_Demo_Build
        - docker build --build-arg STAGE=${STAGE} -t digirefahi-front-demo:latest .
        - echo build is done
      rules:
      - if: '$CI_COMMIT_BRANCH == "demo"'

  deploy-demo:
      stage: deploy-demo
      tags:
        - build
      script:
        - echo deployment started
        - docker rm -f digirefahi-front-demo || true  # Stop the previous container if running (ignore errors if it doesn't exist)
        - docker run -d -p 30021:80 --name digirefahi-front-demo digirefahi-front-demo:latest  # Start the new container with the latest image 
      after_script:  
        - echo deployment is done.
      
      rules:
       - if: '$CI_COMMIT_BRANCH == "demo"'


stages:
  - build
  - deploy
  - demo
build:
  stage: build
  tags:
    - build
  variables:
    current_stage: "${digirefahi_development_build}"  
  script:
    - echo build started 
    - echo $digirefahi_development_build
    - echo $current_stage 
    - docker build --build-arg current_stage=${current_stage} -t digirefahi-front:latest .
    - echo build is done

deploy:
  stage: deploy
  tags:
    - build
  script:
    - echo deployment started
    - docker rm -f digirefahi-front-dev || true  # Stop the previous container if running (ignore errors if it doesn't exist)
    - docker run -d -p 30011:80 --name digirefahi-front-dev digirefahi-front:latest  # Start the new container with the latest image 
  after_script:  
    - echo deployment is done


demo:
  stage: demo
  tags:
    - build
  script:
    - echo deployment started
    - docker rm -f digirefahi-front-demo || true  # Stop the previous container if running (ignore errors if it doesn't exist)
    - docker run -d -p 30021:80 --name digirefahi-front-demo digirefahi-front:latest  # Start the new container with the latest image 
  after_script:  
    - echo deployment is done

    
# Run build and deploy stages when changes are made to the dev branch
workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "development"'
      changes:
        - '**/*'
